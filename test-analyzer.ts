/**
 * Script de prueba para el analyzer educativo
 *
 * Uso: npx tsx test-analyzer.ts
 *
 * Este script:
 * 1. Carga dotenv para API Key
 * 2. Crea respuestas de prueba
 * 3. Llama al analyzer
 * 4. Muestra resultados y costos
 */

import dotenv from 'dotenv';
dotenv.config();

import analyzer from './src/services/ai/claude/analyzer';

// Respuestas de prueba simulando un reporte semanal real
const sampleAnswers = [
  {
    id: 'ans1',
    questionId: 'q1',
    questionText: '¬øQu√© aprendiste esta semana en la materia?',
    answer: 'Esta semana aprend√≠ sobre las leyes de Newton y c√≥mo se aplican en la vida cotidiana. Me pareci√≥ muy interesante el concepto de inercia y pude relacionarlo con situaciones que veo todos los d√≠as.',
    type: 'long_text'
  },
  {
    id: 'ans2',
    questionId: 'q2',
    questionText: '¬øQu√© dificultades encontraste?',
    answer: 'Tuve algunas dificultades con los ejercicios de fuerza y aceleraci√≥n, especialmente cuando hay varias fuerzas actuando al mismo tiempo. A veces me confundo con los signos.',
    type: 'long_text'
  },
  {
    id: 'ans3',
    questionId: 'q3',
    questionText: '¬øC√≥mo te organizaste para estudiar?',
    answer: 'Hice res√∫menes de cada ley y practiqu√© con ejercicios del libro. Tambi√©n vi algunos videos en YouTube que explicaban los conceptos de forma visual.',
    type: 'long_text'
  },
  {
    id: 'ans4',
    questionId: 'q4',
    questionText: '¬øQu√© te gustar√≠a mejorar para la pr√≥xima semana?',
    answer: 'Me gustar√≠a practicar m√°s ejercicios complejos y mejorar mi velocidad para resolver problemas. Tambi√©n quiero entender mejor el tema de la tercera ley de Newton.',
    type: 'long_text'
  }
];

async function testAnalyzer() {
  console.log('\n' + '='.repeat(70));
  console.log('üß™ TESTING EDUCATIONAL ANALYZER');
  console.log('='.repeat(70) + '\n');

  // Verificar API Key
  if (!process.env.ANTHROPIC_API_KEY) {
    console.error('‚ùå ERROR: ANTHROPIC_API_KEY no encontrada en .env\n');
    process.exit(1);
  }

  console.log('‚úÖ API Key encontrada');
  console.log('üìö Materia de prueba: F√≠sica');
  console.log('üìù Respuestas de prueba: ' + sampleAnswers.length + ' respuestas\n');

  console.log('‚îÅ'.repeat(70));
  console.log('üìã RESPUESTAS DEL ESTUDIANTE:');
  console.log('‚îÅ'.repeat(70));
  sampleAnswers.forEach((answer, idx) => {
    console.log(`\n${idx + 1}. ${answer.questionText}`);
    console.log(`   ‚Üí ${answer.answer.substring(0, 100)}${answer.answer.length > 100 ? '...' : ''}`);
  });
  console.log('\n' + '‚îÅ'.repeat(70) + '\n');

  console.log('üöÄ Llamando a Claude API para an√°lisis...\n');

  const startTime = Date.now();

  try {
    const result = await analyzer.analyzeAnswers(
      sampleAnswers,
      'F√≠sica',
      undefined,  // Sin r√∫brica espec√≠fica
      'structured'
    );

    const totalTime = Date.now() - startTime;

    console.log('‚úÖ AN√ÅLISIS COMPLETADO EXITOSAMENTE\n');
    console.log('='.repeat(70));
    console.log('üìä RESULTADOS DEL AN√ÅLISIS');
    console.log('='.repeat(70) + '\n');

    console.log('üìà PUNTAJE GENERAL: ' + result.score + '/100\n');

    console.log('üí™ FORTALEZAS:');
    console.log(result.strengths);
    console.log('');

    console.log('üéØ √ÅREAS DE MEJORA:');
    console.log(result.improvements);
    console.log('');

    console.log('üìù COMENTARIOS GENERALES:');
    console.log(result.generalComments);
    console.log('');

    console.log('‚îÅ'.repeat(70));
    console.log('üìä M√âTRICAS DE HABILIDADES:');
    console.log('‚îÅ'.repeat(70));
    console.log('  Completeness (Completitud):  ' + result.skillsMetrics.completeness + '/100');
    console.log('  Clarity (Claridad):          ' + result.skillsMetrics.clarity + '/100');
    console.log('  Reflection (Reflexi√≥n):      ' + result.skillsMetrics.reflection + '/100');
    console.log('  Progress (Progreso):         ' + result.skillsMetrics.progress + '/100');
    console.log('  Engagement (Compromiso):     ' + result.skillsMetrics.engagement + '/100');
    console.log('');

    console.log('‚îÅ'.repeat(70));
    console.log('‚è±Ô∏è  PERFORMANCE & COSTOS');
    console.log('‚îÅ'.repeat(70));
    console.log('  Tiempo total:  ' + totalTime + 'ms');
    console.log('');

    console.log('='.repeat(70));
    console.log('‚úÖ TEST COMPLETADO EXITOSAMENTE');
    console.log('='.repeat(70) + '\n');

    console.log('üìã PR√ìXIMOS PASOS:');
    console.log('   1. El analyzer funciona correctamente ‚úÖ');
    console.log('   2. Probar con reportes reales de la base de datos');
    console.log('   3. Testear el endpoint /api/ai/analyze-report');
    console.log('   4. Validar costos en producci√≥n\n');

  } catch (error: any) {
    const totalTime = Date.now() - startTime;

    console.log('‚ùå TEST FAILED\n');
    console.log('‚îÅ'.repeat(70));
    console.log('üî¥ ERROR:');
    console.log('‚îÅ'.repeat(70));
    console.log('  Mensaje: ' + error.message);
    console.log('  Tiempo:  ' + totalTime + 'ms\n');

    if (error.stack) {
      console.log('Stack trace:');
      console.log(error.stack);
    }

    console.log('\n' + '='.repeat(70));
    console.log('‚ùå Fix el error antes de continuar');
    console.log('='.repeat(70) + '\n');

    process.exit(1);
  }
}

// Ejecutar test
testAnalyzer().catch((error) => {
  console.error('\n‚ùå Error inesperado:', error.message);
  if (error.stack) {
    console.error('\nStack trace:', error.stack);
  }
  process.exit(1);
});
